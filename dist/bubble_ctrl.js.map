{"version":3,"sources":["../src/bubble_ctrl.js"],"names":["MetricsPanelCtrl","d3v3","_","$","TimeSeries","config","kbn","panelDefaults","mode","bgColor","valueName","nullPointMode","decimal","format","colorScheme","groupDepthColors","thresholds","thresholdColors","gradientThresholds","gradientColors","groupSeperator","displayLabel","height","gridPos","x","y","w","h","BubbleChartCtrl","$scope","$injector","defaultsDeep","panel","containerDivId","id","panelContainer","svgContainer","svgBubbleId","events","on","onRender","bind","onInitEditMode","onDataReceived","onDataError","dataList","series","map","seriesHandler","render","seriesData","datapoints","alias","target","flotpairs","getFlotPairs","serie","i","name","aliases","split","size","valueFormater","stats","tree","title","parsedSeries","parseSeries","forEach","createRecurseTree","record","length","group","find","children","r","undefined","push","shift","newKey","newId","angular","element","isEmptyObject","_id","child","key","recurseTree","container","remove","panelTitleOffset","panelHeight","isNewDashboardLayout","getPanelHeight","panelWidth","getPanelWidthBySpan","Math","min","svg","select","append","attr","opt","valueFormatFunc","valueFormats","bootData","user","lightTheme","bubble","bubbleChart","data","renderData","updateGridPos","addEditorTab","unitFormats","getUnitFormats","subItem","value","$timeout","cancel","nextTickPromise","tmp","row","isString","parseInt","replace","viewPortWidth","max","document","documentElement","clientWidth","window","innerWidth","pixelsPerSpan","trueWidth","round","span","scope","elem","attrs","ctrl","gaugeByClass","childNodes","setContainer","parseSeriesToJSON","addBubbleChart","renderingCompleted","templateUrl"],"mappings":"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","file":"bubble_ctrl.js","sourcesContent":["import { MetricsPanelCtrl } from 'app/plugins/sdk';\nimport * as d3v3 from './external/d3.v3.min';\nimport _ from 'lodash';\nimport $ from 'jquery';\nimport TimeSeries from 'app/core/time_series';\n//import './external/d3.tip.v0.6.3';\nimport './external/jquery.tipsy.min.js';\nimport './css/jquery.tipsy.min.css!';\nimport './css/bubble-panel.css!';\nimport './external/bubble';\nimport config from 'app/core/config';\nimport kbn from 'app/core/utils/kbn';\n\nconst panelDefaults = {\n    mode: 'time',\n    bgColor: null,\n    valueName: 'current',\n    nullPointMode: 'connected',\n    decimal: 2,\n    format: 'short',\n    colorScheme: 'Group',\n    groupDepthColors: [\"hsl(152,80%,80%)\", \"hsl(228,30%,40%)\"],\n    thresholds: \"50,80\",\n    thresholdColors: [\"green\", \"yellow\", \"red\"],\n    gradientThresholds: \"50,80\",\n    gradientColors: ['red', 'green'],\n    groupSeperator: ',',\n    displayLabel: true,\n    height: 400,\n    gridPos: { x: 0, y: 0, w: 12, h: 11 }\n};\n\nexport class BubbleChartCtrl extends MetricsPanelCtrl {\n\n    constructor($scope, $injector) {\n        super($scope, $injector);\n        _.defaultsDeep(this.panel, panelDefaults);\n\n        this.containerDivId = 'container_' + this.panel.id;\n        this.panelContainer = null;\n        this.panel.svgContainer = null;\n        this.panel.svgBubbleId = 'svg_' + this.panel.id;\n\n        this.events.on('render', this.onRender.bind(this));\n        this.events.on('init-edit-mode', this.onInitEditMode.bind(this));\n        this.events.on('data-received', this.onDataReceived.bind(this));\n        this.events.on('data-error', this.onDataError.bind(this));\n        this.events.on('data-snapshot-load', this.onDataReceived.bind(this));\n    }\n\n    onDataReceived(dataList) {\n        this.series = dataList.map(this.seriesHandler.bind(this));\n        this.render();\n    }\n\n    seriesHandler(seriesData) {\n        var series = new TimeSeries({\n            datapoints: seriesData.datapoints,\n            alias: seriesData.target\n        });\n\n        series.flotpairs = series.getFlotPairs(this.panel.nullPointMode);\n        return series;\n    }\n\n    parseSeries(series) {\n        return _.map(this.series, (serie, i) => {\n            return {\n                name: serie.alias,\n                aliases: serie.alias.split(this.panel.groupSeperator),\n                size: serie.valueFormater(serie.stats[this.panel.valueName], this.panel.decimal)\n            };\n        });\n    }\n\n    parseSeriesToJSON() {\n        var tree = { \"name\": this.panel.title, \"children\": [] };\n        this.parsedSeries = this.parseSeries(this.series);\n        _.forEach(this.parsedSeries, record => {\n            this.createRecurseTree(tree, record.aliases, record);\n        });\n        return tree;\n    }\n\n    createRecurseTree(tree, aliases, record) {\n        if (aliases.length === 0)\n            return;\n        var alias = aliases[0];\n        var group = _.find(tree.children, function(r) {\n            return r.name == alias;\n        });\n        if (group === undefined) {\n            if (aliases.length == 1) {\n                group = { \"name\": alias };\n            } else {\n                group = { \"name\": alias, \"children\": [] };\n            }\n\n            tree.children.push(group);\n        }\n        if (aliases.length == 1) {\n            group.size = record.size;\n        }\n        aliases.shift();\n        this.createRecurseTree(group, aliases, record);\n    }\n\n    recurseTree(tree, newKey, newId) {\n        if (angular.element.isEmptyObject(tree)) {\n            tree[newKey] = { _id: newId };\n            return;\n        }\n\n        var child = null; // find current tree's child\n        for (var key in tree) {\n            if (key != '_id') {\n                child = tree[key]; // found a child\n                break;\n            }\n        }\n        if (child) { // recursively process on child\n            recurseTree(child, newKey, newId);\n        } else { // no child, so just fill the tree\n            tree[newKey] = { _id: newId };\n        }\n    }\n\n    onDataError() {\n        this.series = [];\n        this.render();\n    }\n\n    /**\n     * [setContainer description]\n     * @param {[type]} container [description]\n     */\n    setContainer(container) {\n        this.panelContainer = container;\n        this.panel.svgContainer = container;\n    }\n\n    onRender() {\n        //this.data = json_data;\n    }\n\n    addBubbleChart() {\n        if ($('#' + this.panel.svgBubbleId).length) {\n            $('#' + this.panel.svgBubbleId).remove();\n        }\n\n        var panelTitleOffset = 0;\n        if (this.panel.title !== \"\") {\n            panelTitleOffset = 25;\n        }\n\n        this.panelHeight = this.isNewDashboardLayout() ? this.panel.gridPos.h * 30 : this.getPanelHeight() - panelTitleOffset;\n        this.panelWidth = this.isNewDashboardLayout() ? this.panel.gridPos.w * 30 : this.getPanelWidthBySpan();\n\n        this.panelHeight = this.panelWidth = Math.min(this.panelHeight, this.panelWidth);\n        var svg = d3v3.select(this.panel.svgContainer)\n            .append(\"svg\")\n            .attr(\"width\", this.panelWidth)\n            .attr(\"height\", this.panelHeight)\n            .attr(\"viewBox\", '0,0,' + this.panelHeight + ',' + this.panelWidth)\n            .attr(\"id\", this.panel.svgBubbleId);\n\n        var opt = {\n            colorScheme: this.panel.colorScheme,\n            groupDepthColors: this.panel.groupDepthColors,\n            thresholds: this.panel.thresholds,\n            thresholdColors: this.panel.thresholdColors,\n            gradientThresholds: this.panel.gradientThresholds,\n            gradientColors: this.panel.gradientColors,\n            displayLabel: this.panel.displayLabel,\n            valueFormatFunc: kbn.valueFormats[this.panel.format],\n            decimal: this.panelContainer.decimal,\n            bgColor: config.bootData.user.lightTheme ?\n                'rgb(230,230,230)' : 'rgb(38,38,38)'\n        };\n        this.bubble = new bubbleChart(svg, opt);\n        if (this.data)\n            this.bubble.renderData(this.data);\n    }\n\n    isNewDashboardLayout() {\n        return this.panel.updateGridPos !== undefined;\n    }\n\n    onInitEditMode() {\n        this.addEditorTab('Options', 'public/plugins/digrich-bubblechart-panel/editor.html', 2);\n        this.unitFormats = kbn.getUnitFormats();\n    }\n\n    setUnitFormat(subItem) {\n        this.panel.format = subItem.value;\n        this.render();\n    }\n\n    onPanelTeardown() {\n        this.$timeout.cancel(this.nextTickPromise);\n    }\n\n    invertColorOrder() {\n        var tmp = this.panel.thresholdColors[0];\n        this.panel.thresholdColors[0] = this.panel.thresholdColors[2];\n        this.panel.thresholdColors[2] = tmp;\n        this.render();\n    }\n\n    getPanelHeight() {\n        //panel can have a fixed height via options\n        var height = this.panel.height || this.row.height || 250;\n        if (_.isString(height)) {\n            height = parseInt(height.replace('px', ''), 10);\n        }\n        return height;\n    }\n\n    // determine the width of a panel by the span and viewport\n    getPanelWidthBySpan() {\n        var viewPortWidth = Math.max(document.documentElement.clientWidth, window.innerWidth || 0);\n        // get the pixels of a span\n        var pixelsPerSpan = viewPortWidth / 12;\n        // multiply num spans by pixelsPerSpan\n        var trueWidth = Math.round(this.panel.span * pixelsPerSpan);\n        return trueWidth;\n    }\n\n    link(scope, elem, attrs, ctrl) {\n        var gaugeByClass = elem.find('div#bubble-container');\n        gaugeByClass.append('<div id=\"' + ctrl.containerDivId + '\"></div>');\n\n        var container = gaugeByClass[0].childNodes[1];\n        ctrl.setContainer(container);\n\n        function render() {\n            if (!ctrl.series) { return; }\n\n            ctrl.data = ctrl.parseSeriesToJSON();\n            ctrl.addBubbleChart();\n        }\n        this.events.on('render', () => {\n            render();\n            ctrl.renderingCompleted();\n        });\n    }\n}\n\nBubbleChartCtrl.templateUrl = 'module.html';"]}